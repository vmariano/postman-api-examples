{
	"info": {
		"_postman_id": "354a91e6-db1d-4e68-8632-247ea4cf81d8",
		"name": "postman-api-examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27427964"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Return a list of users\", () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf.at.least(3);",
									"",
									"    responseData.forEach(function (user) {",
									"        pm.expect(user).to.have.property('id').that.is.a('number');",
									"        pm.expect(user).to.have.property('name').that.is.a('string');",
									"        pm.expect(user).to.have.property('title').that.is.a('string');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/api/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"return a single user\",  () => {",
									"    pm.response.to.have.status(200);",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.id).eq(1);",
									"    pm.expect(responseData.name).eq('Jerry Seinfeld');",
									"    pm.expect(responseData.title).eq('Comedian');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/api/users/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Return an uptated list of users with the new user\", () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    pm.expect(responseData.length).eq(4);",
									"",
									"    responseData.forEach(function (user) {",
									"        pm.expect(user).to.have.property('id').that.is.a('number');",
									"        pm.expect(user).to.have.property('name').that.is.a('string');",
									"        pm.expect(user).to.have.property('title').that.is.a('string');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 4,\n    \"name\": \"Cosmo Kramer\",\n    \"title\": \"-\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/api/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "update target user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Return new user\",  () => {",
									"",
									"    pm.response.to.have.status(200);",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.id).eq(5);",
									"    pm.expect(responseData.name).eq('Newman');",
									"    pm.expect(responseData.title).eq('-');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 5,\n    \"name\": \"Newman\",\n    \"title\": \"-\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/api/users/5",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "update  target user titile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Return new user\",  () => {",
									"",
									"    pm.response.to.have.status(200);",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.id).eq(2);",
									"    pm.expect(responseData.name).eq(\"George Constanza\");",
									"    pm.expect(responseData.title).eq(\"Yankees Assistant\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{ \"title\": \"Yankees Assistant\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/api/users/2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete target user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Return a updated list of users\", () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    pm.expect(responseData.length).eq(4);",
									"",
									"    responseData.forEach(function (user) {",
									"        pm.expect(user).to.have.property('id').that.is.a('number');",
									"        pm.expect(user).to.have.property('name').that.is.a('string');",
									"        pm.expect(user).to.have.property('title').that.is.a('string');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/api/users/5",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"description": "A collection of users for the api example."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "loclahost"
		}
	]
}